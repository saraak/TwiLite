[{"/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/index.js":"1","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/App.js":"2","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/reportWebVitals.js":"3","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/Main.js":"4","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/Home/Home.js":"5","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/Signup/Signup.js":"6","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/New/Newchirp.js":"7","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/Signin/Signin.js":"8"},{"size":500,"mtime":1611023544558,"results":"9","hashOfConfig":"10"},{"size":1239,"mtime":1614627085966,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611023544560,"results":"12","hashOfConfig":"10"},{"size":399,"mtime":1611024029874,"results":"13","hashOfConfig":"10"},{"size":2611,"mtime":1614629990224,"results":"14","hashOfConfig":"10"},{"size":3739,"mtime":1614629790295,"results":"15","hashOfConfig":"10"},{"size":2117,"mtime":1614585949961,"results":"16","hashOfConfig":"10"},{"size":1949,"mtime":1614629790307,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"q8quo9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/index.js",[],["38","39"],"/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/App.js",["40"],"import React, {useState} from 'react';\nimport { Router, Link } from '@reach/router';\nimport './App.css';\nimport Main from \"./Main\";\nimport Home from \"./components/Home/Home\";\nimport SignUp from \"./components/Signup/Signup\";\nimport NewChirp from \"./components/New/Newchirp\";\nimport Signin from \"./components/Signin/Signin\"\n\nfunction App() {\n\n    const [getUser, setUser] = useState({});\n\n  return (\n      <div className=\"App\" >\n          <div>\n              <nav>\n                  <Link className=\"app-name\" to=\"/Signup\"><i><b>TwiLite</b></i></Link>\n                  <div>\n\n                      <div className=\"nav-bar\">\n                          <Link className=\"nav-item\" to=\"/Signin\"><button>Sign In</button></Link>\n                          <Link className=\"nav-item\" to=\"/Signup\"><button>Sign Up</button></Link>\n                      </div>\n                  </div>\n              </nav>\n            <Router>\n                <Home path='/Home' getUser={getUser}/>\n                <SignUp path='/Signup' setUser={setUser} />\n                <NewChirp path='/Home/NewChirp' getUser={getUser} />\n                <Signin path='/Signin' setUser={setUser} />\n            </Router>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/reportWebVitals.js",[],"/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/Main.js",["41"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nexport default () => {\n    const [ message, setMessage ] = useState(\"Loading...\")\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api\")\n            .then(res=>setMessage(res.data.message))\n    }, []);\n    return (\n        <div>\n            <h2>Message from the backend: {message}</h2>\n        </div>\n    )\n}\n","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/Home/Home.js",[],"/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/Signup/Signup.js",["42","43"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\nimport './Signup.css';\n\nconst Signup = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        axios\n            .post(\"http://localhost:8000/api/signup\", {\n                firstName: firstName,\n                lastName: lastName,\n                userName: userName,\n                email: email,\n                password: password\n            })\n            .then((res) => {\n                console.log(res.data);\n                props.setUser(res.data);\n                if(res.data.errors){\n                    alert(res.data.message.replaceAll(',','\\n'))\n                }else {\n                    console.log(\"Received\");\n                    alert(\"Thank you. Your account has been created.\")\n                    navigate(\"/Home\");\n                }\n\n            })\n            .catch((err) => alert(err))}\n\n\n    return (\n        <div>\n            <h1 style={{textAlign:'center'}}>SIGN UP</h1>\n            <div />\n            <form onSubmit={submitForm}>\n\n               <div className=\"form-item\">\n                    <label>Username: </label>\n                    <input type=\"text\"\n                           name=\"username\"\n                           value={ userName }\n                           onChange={ (e) => setUserName(e.target.value)}/>\n                           { errors.userName ? <p className=\"text-danger\">{errors.userName.properties.message} </p>: \"\" }\n               </div>\n\n                <div className=\"form-item\">\n                    <label>First Name: </label>\n                    <input type=\"text\"\n                           name=\"name\"\n                           value={ firstName }\n                           onChange={ (e) => setFirstName(e.target.value)}/>\n                           { errors.firstName ? <p className=\"text-danger\">{errors.firstName.properties.message} </p>: \"\" }\n                </div>\n\n                <div className=\"form-item\">\n                    <label>Last Name: </label>\n                    <input type=\"text\"\n                           name=\"name\"\n                           value={ lastName }\n                           onChange={ (e) => setLastName(e.target.value)}/>\n                           { errors.lastName ? <p className=\"text-danger\">{errors.lastName.properties.message} </p>: \"\" }\n                </div>\n\n                <div className=\"form-item\">\n                    <label>Email: </label>\n                    <input type=\"text\"\n                           name=\"email\"\n                           value={ email }\n                           onChange={ (e) => setEmail(e.target.value)}/>\n                           { errors.email ? <p className=\"text-danger\">{errors.email.properties.message} </p>: \"\" }\n                </div>\n\n                <div className=\"form-item\">\n                    <label>Password: </label>\n                    <input type=\"text\"\n                           name=\"password\"\n                           value={ password }\n                           onChange={ (e) => setPassword(e.target.value)}/>\n                           { errors.password ? <p className=\"text-danger\">{errors.password.properties.message} </p>: \"\" }\n                </div>\n\n                <button type=\"submit\" className=\"btn-lg btn-warning\"><b>Create Account!</b></button>\n            </form>\n        </div>)\n}\n\nexport default Signup;\n\n","/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/New/Newchirp.js",[],"/Users/saraakhtar/Desktop/Coding_Dojo/TwiLite/client/src/components/Signin/Signin.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":3,"column":1,"nodeType":"54","endLine":14,"endColumn":2},{"ruleId":"48","severity":1,"message":"55","line":3,"column":20,"nodeType":"50","messageId":"51","endLine":3,"endColumn":24},{"ruleId":"48","severity":1,"message":"56","line":12,"column":20,"nodeType":"50","messageId":"51","endLine":12,"endColumn":29},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","'setErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]